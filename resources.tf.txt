/* Creating  the VPC */

 resource "aws_vpc" "vpc" {                 # Creating VPC here
   cidr_block       = var.main_vpc_cidr     # Defining the CIDR block use 10.0.0.0/24 
   instance_tenancy = "default"
 }

 /* Creating  Internet Gateway and attach it to VPC */

 resource "aws_internet_gateway" "IGW" {    # Creating Internet Gateway
    vpc_id =  aws_vpc.vpc.id                # vpc_id will be generated after we create VPC
 }

/* Creating  a Public Subnets */

 resource "aws_subnet" "publicsubnets" {       # Creating Public Subnets
   vpc_id =  aws_vpc.vpc.id
   cidr_block = "${var.public_subnets}"        # CIDR block of public subnets
 }

/* Create a Private Subnet */                     # Creating Private Subnets
 resource "aws_subnet" "privatesubnets" {
   vpc_id =  aws_vpc.vpc.id
   cidr_block = "${var.private_subnets}"          # CIDR block of private subnets
 }

/* Route table for Public Subnet's */

 resource "aws_route_table" "routepublic" {       # Creating RT for Public Subnet
    vpc_id =  aws_vpc.vpc.id
         route {
    cidr_block = "0.0.0.0/0"                      # Traffic from Public Subnet reaches Internet via Internet Gateway
    gateway_id = aws_internet_gateway.igw.id
     }
 }

 resource "aws_eip" "natgwip" {
   vpc   = true
 }

/*  Creating the NAT Gateway using subnet_id and allocation_id */

 resource "aws_nat_gateway" "natgw" {
   allocation_id = aws_eip.natgwip.id
   subnet_id = aws_subnet.publicsubnets.id
 }

/* Route table for Private Subnet's */
 resource "aws_route_table" "routeprivate" {      # Creating RT for Private Subnet
   vpc_id = aws_vpc.vpc.id
   route {
   cidr_block = "0.0.0.0/0"                       # Traffic from Private Subnet reaches Internet via NAT Gateway
   nat_gateway_id = aws_nat_gateway.natgw.id
   }
 }

/* Route table Association with Public Subnet's */
 resource "aws_route_table_association" "Publicsubnetassociation" {
    subnet_id = aws_subnet.publicsubnets.id
    route_table_id = aws_route_table.routepublic.id
 }


/*  Route table Association with Private Subnet's */
 resource "aws_route_table_association" "Privatesubnetassociation" {
    subnet_id = aws_subnet.privatesubnets.id
    route_table_id = aws_route_table.routeprivate.id
 }

 